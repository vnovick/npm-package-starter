{
  // I want to use babel-eslint for parsing!
  "parser": "babel-eslint"
  , "env": {
    // I write for browser
    "browser": true
    // in CommonJS
    , "node": true
    // I am from the future
    , "es6": true
    // I love TDD
    , "mocha": true
  }
  , "plugins": ["react"]
  , "rules": {
    // Sorted as they appear here: http://eslint.org/docs/rules/
    // Possible Errors
    "comma-dangle": [0]
    , "no-cond-assign": [1, "except-parens"]
    , "no-console": [1]
    , "no-constant-condition": [1]
    , "no-control-regex": [1]
    , "no-debugger": [2]
    , "no-dupe-args": [2]
    , "no-dupe-keys": [2]
    , "no-duplicate-case": [2]
    , "no-empty": [1]
    , "no-ex-assign": [2]
    , "no-extra-boolean-cast": [1]
    , "no-extra-parens": [2, "functions"]
    , "no-extra-semi": [1]
    , "no-func-assign": [2]
    , "no-inner-declarations": [2, "both"]
    , "no-invalid-regexp": [2]
    , "no-irregular-whitespace": [2]
    , "no-negated-in-lhs": [2]
    , "no-obj-calls": [2]
    , "no-regex-spaces": [1]
    , "no-reserved-keys": [0]
    , "no-sparse-arrays": [1]
    , "no-unreachable": [2]
    , "use-isnan": [2]
    , "valid-jsdoc": [1]
    , "valid-typeof": [2]
    // Best Practices
    , "block-scoped-var": [2]
    , "complexity": [1, 7]
    , "consistent-return": [2]
    , "curly": [2, "all"]
    , "default-case": [2]
    , "dot-notation": [1, { "allowKeywords": true }]
    , "eqeqeq": [2]
    , "guard-for-in": [0]
    , "no-alert": [2]
    , "no-caller": [2]
    , "no-div-regex": [0]
    , "no-else-return": [1]
    , "no-eq-null": [2]
    , "no-eval": [2]
    , "no-extend-native": [2]
    , "no-extra-bind": [1]
    , "no-fallthrough": [2]
    , "no-floating-decimal": [2]
    , "no-implied-eval": [2]
    , "no-iterator": [2]
    , "no-labels": [1]
    , "no-lone-blocks": [1]
    , "no-loop-func": [2]
    , "no-multi-spaces": [1, { exceptions: {
            "Property": false,
            "ImportDeclaration": true,
            "VariableDeclarator": true
        }
    }]
    , "no-multi-str": [2]
    , "no-native-reassign": [2]
    , "no-new": [1]
    , "no-new-func": [2]
    , "no-new-wrappers": [2]
    , "no-octal": [2]
    , "no-octal-escape": [2]
    , "no-param-reassign": [1, { "props": false }]
    , "no-process-env": [0]
    , "no-proto": [2]
    , "no-redeclare": [2, { "builtinGlobals": true }]
    , "no-return-assign": [2, "except-parens"]
    , "no-script-url": [2]
    , "no-self-compare": [2]
    , "no-sequences": [1]
    , "no-throw-literal": [2]
    , "no-unused-expressions": [0]
    , "no-void": [1]
    , "no-warning-comments": [0]
    , "no-with": [2]
    , "radix": [2]
    , "vars-on-top": [0]
    , "wrap-iife": [2, "outside"]
    , "yoda": [1]
    // Strict Mode
    , "strict": [0, "global"]
    // Variables
    , "no-catch-shadow": [0]
    , "no-delete-var": [2]
    , "no-label-var": [2]
    , "no-shadow": [1, { "builtinGlobals": true }]
    , "no-shadow-restricted-names": [2]
    , "no-undef": [2]
    , "no-undef-init": [1]
    , "no-undefined": [0]
    , "no-unused-vars": [1, { "args": "none" }]
    , "no-use-before-define": [2]
    // Node.js
    , "handle-callback-err": [2, "^.*(e|E)rr"]
    , "no-mixed-requires": [1]
    , "no-new-require": [2]
    , "no-path-concat": [2]
    , "no-process-exit": [2]
    , "no-restricted-modules": [0]
    , "no-sync": [0]
    // Stylistic Issues
    , "camelcase": [1]
    , "comma-spacing": [1, { "before": false, "after": true }]
    , "eol-last": [0]
    , "indent": [1, 2, { "SwitchCase": 1 }]
    , "key-spacing": [1, { "beforeColon": false, "afterColon": true }]
    , "lines-around-comment": [1, { "beforeBlockComment": true, "allowBlockStart": true }]
    , "linebreak-style": [2, "unix"]
    , "max-nested-callbacks": [0]
    , "new-cap": [1]
    , "new-parens": [1]
    , "newline-after-var": [0]
    , "no-array-constructor": [2]
    , "no-continue": [0]
    , "no-inline-comments": [0]
    , "no-lonely-if": [1]
    , "no-mixed-spaces-and-tabs": [2]
    , "no-multiple-empty-lines": [1, { "max": 2 }]
    , "no-nested-ternary": [1]
    , "no-new-object": [2]
    , "no-spaced-func": [1]
    , "no-ternary": [0]
    , "no-trailing-spaces": [1, { "skipBlankLines": true }]
    , "no-underscore-dangle": [0]
    , "no-unneeded-ternary": [1]
    , "object-curly-spacing": [1, "always"]
    , "one-var": [1, { "initialized": "never" }]
    , "operator-assignment": [0]
    , "operator-linebreak": [0]
    , "padded-blocks": [1, "never"]
    , "quote-props": [2, "as-needed"]
    , "quotes": [0, "single", "avoid-escape"]
    , "semi-spacing": [1, { "before": false, "after": true }]
    , "semi": [1, "always"]
    , "sort-vars": [0]
    // , "space-before-blocks": [1, "always"]
    , "space-before-function-paren": [1, "never"]
    , "space-in-parens": [1, "never"]
    , "space-infix-ops": [1]
    , "space-unary-ops": [1, { "words": true, "nonwords": false }]


    // yannickcr/eslint-plugin-react
    , "react/display-name": 0
    , "react/jsx-boolean-value": 0
    , "react/jsx-closing-bracket-location": [1, { "location": "tag-aligned" }]
    , "react/jsx-curly-spacing": [1, "always", { "allowMultiline": true }]
    , "react/jsx-max-props-per-line": [1, { "maximum": 2 }]
    , "react/jsx-indent-props": [2, 2]
    , "react/jsx-uses-react": 1
    , "react/jsx-uses-vars": 1
  }
  , "ecmaFeatures": {
    "regexUFlag": true,
    "jsx": true
  }
}
